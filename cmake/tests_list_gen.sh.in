#!/bin/bash
# Generate list of all available KFLAT & UFLAT tests and output
# it as C compatible array
HEADER=$(cat <<-END
/**
 * @file tests_list.h
 * @author Samsung R&D Poland - Mobile Security Group (srpol.mb.sec@samsung.com)
 * @brief Header file collecting the list of all available KFLAT tests
 *  This file has been auto-generated by tests_list_gen script
 */
#include "common.h"

/*
 * Extern-declaration for all test case structures
 */
END
)

MIDDLE=$(cat <<-END

/*
 * Array storing the list of all available test cases
 */
const struct kflat_test_case* test_cases[] = {
END
)

FOOTER=$(cat <<-END
};
END
)

function collect_tests() {
    DIR=$1

    pushd $1 > /dev/null

    if [[ "`ls *.c 2>/dev/null | wc -l`" == "0" ]]; then
        return
    fi

    EXTERNS+=`grep -oP 'KFLAT_REGISTER_TEST\(".+", [^,]+' *.c | grep -oP ',\s*.*' | grep -oP '[^\s,]+' | awk '{print "test_case_" $0}' | awk '{print "extern struct kflat_test_case " $0 ";"}'`
    ENTRIES+=`grep -oP 'KFLAT_REGISTER_TEST\(".+", [^,]+' *.c | grep -oP ',\s*.*' | grep -oP '[^\s,]+' | awk '{print "test_case_" $0}' | awk '{print "\t&" $0 ","}'`

    EXTERNS+=`grep -oP 'KFLAT_REGISTER_TEST_GFA\(".+", [^,]+' *.c | grep -oP ',\s*.*' | grep -oP '[^\s,]+' | awk '{print "test_case_" $0}' | awk '{print "extern struct kflat_test_case " $0 ";"}'`
    ENTRIES+=`grep -oP 'KFLAT_REGISTER_TEST_GFA\(".+", [^,]+' *.c | grep -oP ',\s*.*' | grep -oP '[^\s,]+' | awk '{print "test_case_" $0}' | awk '{print "\t&" $0 ","}'`

    EXTERNS+=`grep -oP 'KFLAT_REGISTER_TEST_GFA_FLAGS\(".+", [^,]+' *.c | grep -oP ',\s*.*' | grep -oP '[^\s,]+' | awk '{print "test_case_" $0}' | awk '{print "extern struct kflat_test_case " $0 ";"}'`
    ENTRIES+=`grep -oP 'KFLAT_REGISTER_TEST_GFA_FLAGS\(".+", [^,]+' *.c | grep -oP ',\s*.*' | grep -oP '[^\s,]+' | awk '{print "test_case_" $0}' | awk '{print "\t&" $0 ","}'`

    EXTERNS+=`grep -oP 'KFLAT_REGISTER_TEST_FLAGS\(".+", [^,]+' *.c | grep -oP ',\s*.*' | grep -oP '[^\s,]+' | awk '{print "test_case_" $0}' | awk '{print "extern struct kflat_test_case " $0 ";"}'`
    ENTRIES+=`grep -oP 'KFLAT_REGISTER_TEST_FLAGS\(".+", [^,]+' *.c | grep -oP ',\s*.*' | grep -oP '[^\s,]+' | awk '{print "test_case_" $0}' | awk '{print "\t&" $0 ","}'`

    EXTERNS+=$'\n'
    ENTRIES+=$'\n'

    popd > /dev/null
}


# Generate tests list for KFLAT
EXTERNS=
ENTRIES=
collect_tests "@CMAKE_SOURCE_DIR@/tests"
collect_tests "@CMAKE_SOURCE_DIR@/tests/kflat"

pushd @CMAKE_SOURCE_DIR@/tests > /dev/null
echo "$HEADER" > kflat_tests_list.h
echo "$EXTERNS" >> kflat_tests_list.h
echo "$MIDDLE" >> kflat_tests_list.h
echo "$ENTRIES" >> kflat_tests_list.h
echo "$FOOTER" >> kflat_tests_list.h
popd > /dev/null


# Generate tests list for UFLAT
EXTERNS=
ENTRIES=
collect_tests "@CMAKE_SOURCE_DIR@/tests"
collect_tests "@CMAKE_SOURCE_DIR@/tests/uflat"

pushd @CMAKE_SOURCE_DIR@/tests > /dev/null
echo "$HEADER" > uflat_tests_list.h
echo "$EXTERNS" >> uflat_tests_list.h
echo "$MIDDLE" >> uflat_tests_list.h
echo "$ENTRIES" >> uflat_tests_list.h
echo "$FOOTER" >> uflat_tests_list.h
popd > /dev/null
